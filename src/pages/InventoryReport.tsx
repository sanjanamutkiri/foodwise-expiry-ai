
import React from 'react';
import Header from '@/components/Header';
import { Card, CardContent } from '@/components/ui/card';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { Button } from '@/components/ui/button';
import { FileText, Printer } from 'lucide-react';

const InventoryReport = () => {
  // Sample inventory data - in a real app, this would come from context or database
  const inventoryData = [
    { id: 1, name: 'Paneer', category: 'Dairy & Paneer', quantity: 3, unit: 'kg', expiryDate: new Date(new Date().setDate(new Date().getDate() + 2)) },
    { id: 2, name: 'Ghee', category: 'Dairy & Fats', quantity: 2, unit: 'kg', expiryDate: new Date(new Date().setDate(new Date().getDate() + 14)) },
    { id: 3, name: 'Ginger-Garlic Paste', category: 'Condiments', quantity: 0.5, unit: 'kg', expiryDate: new Date(new Date().setDate(new Date().getDate() + 10)) },
    { id: 4, name: 'Basmati Rice', category: 'Grains & Rice', quantity: 5, unit: 'kg', expiryDate: new Date(new Date().setDate(new Date().getDate() + 120)) },
    { id: 5, name: 'Fresh Coriander', category: 'Herbs & Greens', quantity: 0.2, unit: 'kg', expiryDate: new Date(new Date().setDate(new Date().getDate() - 1)) },
    { id: 6, name: 'Garam Masala', category: 'Spices', quantity: 0.5, unit: 'kg', expiryDate: new Date(new Date().setDate(new Date().getDate() + 60)) },
  ];

  const formatDate = (date) => {
    return new Date(date).toLocaleDateString('en-IN');
  };

  const handlePrintReport = () => {
    window.print();
  };

  const calculateStatus = (expiryDate) => {
    const today = new Date();
    const daysUntilExpiry = Math.ceil(
      (expiryDate.getTime() - today.getTime()) / (1000 * 3600 * 24)
    );

    if (daysUntilExpiry < 0) return 'Expired';
    if (daysUntilExpiry <= 3) return 'Expiring Soon';
    return 'Good';
  };

  return (
    <div className="min-h-screen flex flex-col bg-gray-50">
      <Header />
      
      <main className="flex-1 container mx-auto px-4 py-8">
        <div className="flex justify-between items-center mb-6">
          <div>
            <h1 className="text-2xl font-bold">Inventory Report</h1>
            <p className="text-gray-500">Generated on {new Date().toLocaleDateString('en-IN')}</p>
          </div>
          
          <Button onClick={handlePrintReport} className="print:hidden">
            <Printer className="mr-2 h-4 w-4" />
            Print Report
          </Button>
        </div>
        
        <Card className="mb-6">
          <CardContent className="p-6">
            <h2 className="text-lg font-semibold mb-4">Inventory Summary</h2>
            
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>Name</TableHead>
                  <TableHead>Category</TableHead>
                  <TableHead>Quantity</TableHead>
                  <TableHead>Expiry Date</TableHead>
                  <TableHead>Status</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {inventoryData.map((item) => (
                  <TableRow key={item.id}>
                    <TableCell className="font-medium">{item.name}</TableCell>
                    <TableCell>{item.category}</TableCell>
                    <TableCell>{item.quantity} {item.unit}</TableCell>
                    <TableCell>{formatDate(item.expiryDate)}</TableCell>
                    <TableCell>
                      <span 
                        className={`px-2 py-1 rounded text-xs font-medium
                          ${calculateStatus(item.expiryDate) === 'Expired' ? 'bg-red-100 text-red-800' : 
                          calculateStatus(item.expiryDate) === 'Expiring Soon' ? 'bg-amber-100 text-amber-800' :
                          'bg-green-100 text-green-800'}`}
                      >
                        {calculateStatus(item.expiryDate)}
                      </span>
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
            
            <div className="mt-6 flex justify-between">
              <div>
                <p className="text-sm font-medium">Total Items: {inventoryData.length}</p>
                <p className="text-sm text-muted-foreground">Report generated by FoodWise</p>
              </div>
            </div>
          </CardContent>
        </Card>
        
        <Card>
          <CardContent className="p-6">
            <h2 className="text-lg font-semibold mb-2">Inventory Insights</h2>
            <p className="text-sm text-muted-foreground mb-4">Recommendations based on your current inventory</p>
            
            <div className="space-y-4">
              <div className="p-3 bg-amber-50 border border-amber-200 rounded-md">
                <h3 className="font-medium text-amber-800">Low Stock Alert</h3>
                <p className="text-sm text-amber-700">Fresh Coriander (0.2 kg) is running low and expires soon.</p>
              </div>
              
              <div className="p-3 bg-blue-50 border border-blue-200 rounded-md">
                <h3 className="font-medium text-blue-800">Usage Insights</h3>
                <p className="text-sm text-blue-700">Your Basmati Rice consumption is highest among all items.</p>
              </div>
              
              <div className="p-3 bg-green-50 border border-green-200 rounded-md">
                <h3 className="font-medium text-green-800">Cost Saving</h3>
                <p className="text-sm text-green-700">Consider bulk purchasing of spices to reduce costs by up to 15%.</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </main>
    </div>
  );
};

export default InventoryReport;
